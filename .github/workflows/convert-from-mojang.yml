name: Convert Mojang Samples (FSB -> WAV)

on:
  workflow_dispatch: {}         # 수동 실행
  push:
    branches: [ main ]          # main에 커밋되면 자동 실행

permissions:
  contents: write

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Fetch Mojang bedrock-samples (sounds only)
        run: |
          set -e
          git clone --depth=1 https://github.com/Mojang/bedrock-samples.git
          mkdir -p mojang_sounds
          cp -a bedrock-samples/resource_pack/sounds/. mojang_sounds/

      - name: Install deps (jq, ffmpeg for optional transcode)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq ffmpeg unzip curl

      # 🔹 vgmstream 최신 릴리스에서 리눅스 CLI 바이너리 자동 다운로드
      - name: Download vgmstream-cli (prebuilt)
        run: |
          set -e
          api="https://api.github.com/repos/vgmstream/vgmstream/releases/latest"
          url=$(curl -sL "$api" | jq -r '.assets[] | select(.name|test("linux.*cli.*zip")) | .browser_download_url' | head -n1)
          if [ -z "$url" ] || [ "$url" = "null" ]; then
            echo "Could not find linux cli asset in latest release" >&2
            exit 1
          fi
          echo "Downloading: $url"
          curl -L "$url" -o vgmstream-linux-cli.zip
          unzip -q vgmstream-linux-cli.zip -d vgmcli
          # 흔한 구조: ./vgmstream-cli 또는 ./bin/vgmstream-cli
          chmod +x vgmcli/vgmstream-cli 2>/dev/null || true
          chmod +x vgmcli/bin/vgmstream-cli 2>/dev/null || true
          # 사용 경로 통일
          if [ -x vgmcli/vgmstream-cli ]; then
            ln -s "$PWD/vgmcli/vgmstream-cli" ./vgmstream-cli
          elif [ -x vgmcli/bin/vgmstream-cli ]; then
            ln -s "$PWD/vgmcli/bin/vgmstream-cli" ./vgmstream-cli
          else
            echo "vgmstream-cli not found inside zip" >&2
            ls -R vgmcli || true
            exit 1
          fi
          ./vgmstream-cli -h || true

      - name: Convert FSB -> WAV (flatten)
        run: |
          set -e
          mkdir -p out
          # 모든 .fsb 순회 후 평탄화된 파일명으로 변환
          find mojang_sounds -type f -name '*.fsb' -print0 | while IFS= read -r -d '' f; do
            rel="${f#mojang_sounds/}"        # ui/loom/take_result1.fsb
            noext="${rel%.fsb}"              # ui/loom/take_result1
            base="${noext//\//.}"            # ui.loom.take_result1
            ./vgmstream-cli -D "$f" -o "out/${base}.wav" >/dev/null || true
          done
          ls -l out | head || true
          if ! ls out/*.wav >/dev/null 2>&1; then
            echo "No WAVs produced." >&2
            exit 1
          fi

      - name: Create manifest.json (minecraft:<id>)
        shell: python
        run: |
          import os, json
          items = []
          for fn in sorted(os.listdir('out')):
              if not fn.lower().endswith(('.wav','.ogg')): continue
              base, ext = os.path.splitext(fn)
              items.append({"id": f"minecraft:{base}", "label": base, "url": f"./{fn}"})
          with open('out/manifest.json','w',encoding='utf-8') as f:
              json.dump(items, f, ensure_ascii=False, indent=2)
          print("Wrote out/manifest.json with", len(items), "entries")

      - name: Commit to repo (sounds_flat/)
        run: |
          set -e
          mkdir -p sounds_flat
          rm -rf sounds_flat/*
          cp -a out/. sounds_flat/
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add sounds_flat
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Auto: Convert Mojang FSB -> WAV + manifest (prebuilt vgmstream)"
            git push
          fi

      - name: Upload artifact (optional download)
        uses: actions/upload-artifact@v4
        with:
          name: sounds_flat
          path: out/
